@using Microsoft.AspNetCore.Identity
@inject SignInManager<Msn.InteropDemo.Entities.Identity.SystemUser> SignInManager
@inject UserManager<Msn.InteropDemo.Entities.Identity.SystemUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @*<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><span class="fa fa-user-circle"></span> @User.Identity.Name</a>*@
        <a href="#!" class="nav-link text-dark" title="Mi cuenta"><span class="fa fa-user-circle"></span> @User.Identity.Name</a>

    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Salir</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Ingresar</a>
    </li>
}
</ul>